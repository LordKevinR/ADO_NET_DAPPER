Paquetes:

Microsoft.Data.SqlClient
Dapper
Swashbuckle.AspNetCore
AutoMapper


//Service Area
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

// middleware
app.UseSwagger();
app.UseSwaggerUI();


      "dotnetRunMessages": true,
      "launchUrl": "swagger",



Cors:

builder.Services.AddCors(options =>
{
	options.AddPolicy("NuevaPolitica", app =>
	{
		app.AllowAnyOrigin()
		.AllowAnyHeader()
		.AllowAnyMethod();
	});
});

app.UseCors("NuevaPolitica");







crear base de datos:

CREATE DATABASE MinimalApiConDapper;

USE MinimalApiConDapper;

CREATE TABLE Articulo (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    Descripcion VARCHAR(255),
    FechaIngreso DATE,
    Estado BIT,
    FechaVencimiento DATE NULL,
    Cantidad INT,
    Costo DECIMAL(18,2)
);

CREATE TABLE TipoTransaccion (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    Descripcion VARCHAR(255)
);

CREATE TABLE Estado (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    Descripcion VARCHAR(255)
);

CREATE TABLE Transaccion (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    Descripcion VARCHAR(255) NULL,
    TipoTransaccionId INT,
    ArticuloId INT,
    FechaDocumento DATE,
    EstadoId INT,
    Cantidad INT,
    CostoTotal DECIMAL(18,2),
    FOREIGN KEY (TipoTransaccionId) REFERENCES TipoTransaccion(Id),
    FOREIGN KEY (ArticuloId) REFERENCES Articulo(Id),
    FOREIGN KEY (EstadoId) REFERENCES Estado(Id)
);





insertar datos



INSERT INTO Articulo (Descripcion, FechaIngreso, Estado, FechaVencimiento, Cantidad, Costo)
VALUES 
    ('Articulo 1', '2022-01-01', 1, '2022-12-31', 100, 50.00),
    ('Articulo 2', '2022-02-01', 0, NULL, 50, 25.00),
    ('Articulo 3', '2022-03-01', 1, '2022-11-30', 75, 30.00);


INSERT INTO TipoTransaccion (Descripcion)
VALUES 
    ('Entrada'),
    ('Salida');


INSERT INTO Estado (Descripcion)
VALUES 
    ('Completa'),
    ('Incompleta');


INSERT INTO Transaccion (Descripcion, TipoTransaccionId, ArticuloId, FechaDocumento, EstadoId, Cantidad, CostoTotal)
VALUES 
    ('Transaccion 1', 1, 1, '2022-05-01', 1, 20, 1000.00),
    ('Transaccion 2', 2, 2, '2022-06-15', 2, 15, 375.00),
    ('Transaccion 3', 1, 3, '2022-08-20', 1, 30, 900.00);





probar conexion

		public Task<int> CrearTransaccion(Transaccion transaccion)
		{
			using (var connection = new SqlConnection(connectionString))
			{
				var query = connection.Query("SELECT 1").FirstOrDefault();
			}

			return Task.FromResult(0);
		}







store procedure






-- ================================================
-- Template generated from Template Explorer using:
-- Create Procedure (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the procedure.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE Articulos_Crear 

	@Descripcion varchar(255),
	@FechaIngreso date, 
	@Estado bit, 
	@FechaVencimiento date, 
	@Cantidad int, 
	@Costo decimal(18,2)
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	INSERT INTO Articulo 
	(Descripcion, FechaIngreso, Estado, FechaVencimiento, Cantidad, Costo) 
	VALUES
	(@Descripcion, @FechaIngreso, @Estado, @FechaVencimiento, @Cantidad, @Costo) ;

	SELECT SCOPE_IDENTITY();
END
GO









USE [MinimalApiConDapper]
GO
/****** Object:  StoredProcedure [dbo].[Transacciones_Crear]    Script Date: 3/2/2024 11:32:02 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Transacciones_Crear]

	@Descripcion varchar(255),
	@TipoTransaccionId int,
	@ArticuloId int,
	@FechaDocumento date,
	@EstadoId int,
	@Cantidad int,
	@CostoTotal decimal(18,2)

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	INSERT INTO Transaccion 
	( Descripcion, TipoTransaccionId, ArticuloId, 
	FechaDocumento, EstadoId, Cantidad, CostoTotal )
	VALUES 
	( @Descripcion, @TipoTransaccionId, @ArticuloId, 
	@FechaDocumento, @EstadoId, @Cantidad, @CostoTotal )

	SELECT SCOPE_IDENTITY();
END


















---------- React


npm create vite@latest

proyectoinventario

React

javaScript

cd proyect + tab

npm install

code .

npm run dev




App.jsx ( borrar todo el return ), h1 = Proyecto inventario

abrir 2da terminal 

npm i -D tailwindcss postcss autoprefixer

npx tailwindcss init -p

en tailwind.config pondremos

content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],


en index.css borramos todo pondremos:

@tailwind base;
@tailwind components;
@tailwind utilities;
@tailwind variants;


extensiones

Tailwind CSS IntelliSense
CSS Peek
ES7+ React/Redux/React-Native snippets
Simple React Snippets

npm i react-router-dom


eliminar app.css, app.jsx ( dara error ) 

en main.jsx haremos los iguiente

import React from 'react'
import ReactDOM from 'react-dom/client'
import './index.css'
import { RouterProvider, createBrowserRouter } from 'react-router-dom'

const router = createBrowserRouter([
  {
    path: '/',
    element: <div>Home</div>,
  },
])

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <RouterProvider router={router}/>
  </React.StrictMode>,
)


src/components/Layout.jsx

rfce


por ahora solo hemos mostrado nuestros artiulos y transacciones

ahora vamos a crear:

NevoArticulo.jsx

